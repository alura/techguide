name: React
tags: 
  - front-end
expertise:
  - name: React Jr
    cards:
      - html-fundamentals:
        priority: 8
      - css-fundamentals:
        priority: 8
      - javascript-fundamentals:
        priority: 10
      - dom-fundamentals:
        priority: 10
      - spa-concepts:
        priority: 9
      - html-fundamentals:
        priority: 7
      - react-components:
        priority: 9
      - react-props:
        priority: 9
      - react-hooks-state:
        priority: 9
      - create-react-app:
        priority: 7
      - react-hooks-effect:
        priority: 9
  - name: React Mid
    cards:
      - react-hooks-memo:
        priority: 7
      - react-hooks-callback:
        priority: 9
      - react-hooks-ref:
        priority: 10
      - react-design-system-libraries:
        priority: 4
      - react-dev-tools:
        priority: 5
        optional: true
      - frontend-semantic-versioning:
        priority: 6
      - css-in-js:
        priority: 5
      - styled-components:
        optional: true
        priority: 4
      - react-webrouting:
        priority: 7
      - typescript-fundamentals:
        priority: 5
        optional: true
      - react-testing-library:
        priority: 8
      - jest:
        priority: 8
      - cypress:
        priority: 8
      - javascript-callbacks-promises:
        priority: 8
      - javascript-errorhandling:
        priority: 7
      - babel-fundamentals:
        priority: 6
        optional: true      
  - name: React in depth
    cards:
      - lottie:
        priority: 5
        optional: true
      - framer-motion:
        priority: 5
        optional: true
      - service-workers:
        priority: 7    
      - react-hooks-form:
        priority: 7
      - lodash:
        priority: 4
        optional: true
      - graphql:
        priority: 5
        optional: true
      - apollo-client:
        priority: 5
        optional: true
      - redux-saga:
        priority: 5
        optional: true
      - nextjs-fundamentals:
        priority: 5
        optional: true
collaboration:
  - name: Infraestrutura e Back-end
    cards:
      - git-and-github-fundamentals:
        priority: 9
      - http-fundamentals:
        priority: 10
      # # - first-deploy:
      # #   priority: 10
      - json:
        priority: 8
      - command-line-fundamentals: 
        priority: 8
      - cloud-fundamentals: 
        priority: 6
        optional: true
      - yarn:
        optional: true
        priority: 6
  - name: UX e Design
    cards:
      - design-systems:
        priority: 4
      - figma-fundamentals:
        priority: 8
      - design-components:
        priority: 6
      - color-systems:
        priority: 5
      - how-to-use-fonts:
        priority: 5
faq:
  - title: "O que é o TechGuide.sh?"
    answer: "O TechGuide.sh é uma iniciativa da Alura para mapear as necessidades mais comuns em cada profissional de tecnologia, direcionando tanto alunos e alunas quanto a própria escola com novos cursos, conteúdos, podcasts e artigos. Nós seguimos a abordagem do profissional em T, abrindo mais possibilidades de caminhos e ordenação. Também queremos ter mais descritivos explicando o por quê de aprender cada um daqueles itens (cards) e fechar mais o escopo de cada um."
  - title: "Preciso saber HTML, CSS e JavaScript antes de começar a estudar React?"
    answer: "Ter um conhecimento básico dessas tecnologias será muito útil para entender e utilizar o React de forma eficaz. O React é uma biblioteca JavaScript que é frequentemente usada para criar interfaces de usuário de aplicativos da web. Embora o React permita criar interfaces complexas sem precisar lidar diretamente com HTML e CSS, é importante entender os conceitos básicos dessas tecnologias para entender como o React funciona e como usá-lo adequadamente."
  - title: "Preciso conhecer todos os hooks?"
    answer: "Hooks foram introduzidos no React a partir da versão 16.8 da biblioteca, sendo recursos que permitem que você gerencie o estado, ciclos de vida do componente e outros recursos do React sem precisar escrever componentes em forma de classes. O uso deles é recomendado, mas claro, você não precisa conhecer todos logo de cara. Os mais relevantes costumam ser o 'useState' e 'useEffect', por isso foque nesses primeiro, e aprenda os outros quanto precisar."
  - title: "Preciso aprender TypeScript?"
    answer: "Não é essencial, mas é uma tecnologia que vem sendo cada vez mais adotada pelo mercado React, por isso é interessante estudá-la a partir do Nível 2 de profundidade, pois é possível que você tenha que usá-la em projetos."
video: https://www.youtube.com/watch?v=00_rIYoeJtQ
